#!/system/bin/sh
########路径设置
sdcardpath="$EXTERNAL_STORAGE"
aria2conf="$sdcardpath/aria2.conf"
ariangconf="$sdcardpath/ariang.conf"
languageconf="$sdcardpath/ariang-language.conf"
busybox="`which busybox`";
unset LD_PRELOAD
if [[ $busybox == "" ]];then echo "busybox not found";exit 0;fi
if [[ -z $sdcardpath ]];then echo "no external storage path found";exit 0;fi
###########命令设置########
clear="${busybox} clear"
grep="${busybox} grep"
egrep="${busybox} egrep"
cat="${busybox} cat"
cut="${busybox} cut"
ps="${busybox} ps"
sed="${busybox} sed"
od="${busybox} od"
seq="${busybox} seq"
ls="${busybox} ls"
tr="${busybox} tr"
rm="${busybox} rm"
awk="${busybox} awk"






#####文件处理
if [[ ! -e $aria2conf ]];then $busybox cp /system/etc/aria2.conf $sdcardpath;fi
if [[ ! -e $ariangconf ]];then 
echo "static=false\nrestart=true\nlanguage=Chinese"> $ariangconf;fi
if [[ ! -e $languageconf ]];then $busybox cp /system/etc/ariang-language.conf $sdcardpath;fi
################居中显示函数####################
COLUMNS="`$busybox stty size |$cut -d " " -f 2`"

write_conf(){
if [[ $3 == "" ]];then
echo "`$cat $aria2conf |$sed "/$1=/c $1=$2"`" >$aria2conf
elif [[ $3 != "" &&  $4 == "" ]];then
echo "`$cat $aria2conf |$sed "s/$3/XXXXX/g"|$sed "/$1=/c $1=$2"|$sed "s/XXXXX/$3/g"`" >$aria2conf
elif [[ $3 != "" &&  $4 != "" ]];then
echo "`$cat $aria2conf |$sed "s/$3/XXXXX/g"|$sed "s/$4/DDDDD/g"|$sed "/$1=/c $1=$2"|$sed "s/XXXXX/$3/g"|$sed "s/DDDDD/$4/g"`" >$aria2conf;fi
}

write_conf_ng(){
echo "`$cat $ariangconf |$sed "/$1=/c $1=$2"`" >$ariangconf
}

purple_block(){
echo -e "\033[45m$@\033[0m"
}
blue_block(){
echo -e "\033[46m$@\033[0m"
}
green_block(){
echo -e "\033[42m$@\033[0m"
}
red_block(){
echo -e "\033[41m$@\033[0m"
}
golden_word(){
echo -e "\033[33m$@\033[0m"
}
red_word(){
echo -e "\033[31m$@\033[0m"
}
green_word(){
echo -e "\033[32m$@\033[0m"
}
purple_word(){
echo -e "\033[35m$@\033[0m"
}
blue_word(){
echo -e "\033[36m$@\033[0m"
}
produce(){
product=$($busybox printf "%*s" "$1" "$2")
echo "${product// /"$2"}"
}
display(){
if [[ $term_width_set == "" ]];then
term_width="$COLUMNS"
else
term_width="$term_width_set"
fi
if [[ $1 == "midle" ]];then
if [[ "`echo "$2"|$tr -d '[a-z]'|$egrep -o [^\x00-\xff]+|$sed 's/[[:punct:]]//g'`" != "" ]];then 
chinese="`echo "$2"|$tr -d '[a-z]'|$egrep -o [^\x00-\xff]+|$sed 's/[[:punct:]]//g'|tr -d '\n'|tr -d ' '`"
chinese_length=${#chinese}
((chinese_length=(chinese_length * 2) /3))
((english_length=${#2} - (chinese_length / 2) *3))
((total_width=chinese_length + english_length))
else
total_width=${#2}
fi
((head_width=(term_width - total_width) / 2))
((end_width=(term_width - total_width) - head_width))
if [[ $5 == onn ]];then
((head_width=head_width - 2))
elif [[ $5 == on ]];then
((head_width=head_width - 1));fi
head="`produce $head_width "$3"`">/dev/null 2>&1
end="`produce $end_width "$3"`">/dev/null 2>&1

if [[ $4 == "" ]];then
echo "$6$head$2$end"
else
$4 "$6$head$2$end"
fi
fi
if [[ $1 == "side" ]];then
total_word="$2$3"
if [[ "`echo "$total_word"|$egrep -o [^\x00-\xff]+|$sed 's/[[:punct:]]//g'`" != "" ]];then 
chinese="`echo "$total_word"|$tr -d '[a-z]'|$egrep -o [^\x00-\xff]+|$sed 's/[[:punct:]]//g'|$tr -d '\n'|$tr -d ' '`"
((chinese_length=(${#chinese} * 2) / 3))
((english_length=${#total_word} - (chinese_length / 2) * 3))
((total_width=chinese_length + english_length))
else
total_width=${#total_word}
fi
if [[ $6 == on ]];then
((total_width=total_width + 2))
elif [[ $6 == onn ]];then 
((total_width=total_width + 3));fi
((left_width=term_width - total_width));
space="`produce $left_width " "`"
if [[ $5 == "" ]];then
echo "$7$2$space$3"
else
$5 "$7$2$space$3"
fi
fi
}
stat(){
if [[ $term_width_set == "" ]];then
term_width="$COLUMNS"
else
term_width="$term_width_set"
fi
$clear
stat="$httpd$aria2c"
stat_words="`echo "$stat" | $sed "s/\\[[0-9]*m/ /g"`"
stat_chinese="`echo "$stat_words" | $sed 's/://g'|$sed 's/[ ]//g'|$sed 's/[0-9]*//g'|$sed 's/\.//g'|$sed 's/[a-zA-Z]//g'`"
stat_english="`echo "$stat_words" | $sed 's/[^!-~]//g'`"
stat_chinese_width=${#stat_chinese}
stat_english_width=${#stat_english}
((stat_chinese_width=(stat_chinese_width * 2) / 3))
((stat_width=(stat_english_width + stat_chinese_width)+ 2))
((head_width=(term_width - stat_width) / 2))
((end_width=(term_width - stat_width) - head_width))
head_stat="`produce $head_width -`">/dev/null 2>&1
end_stat="`produce $end_width -`">/dev/null 2>&1
head_stat="\033[46m$head_stat\033[0m"
end_stat="\033[46m$end_stat\033[0m"
display midle "-" "-" "" "" ""
echo ""
display midle "Terminal AriaNg Tools" " "
echo ""
display midle "-" "-" "" "" ""
echo ""
echo -e "$head_stat$stat$end_stat"
echo ""
}


if [[ `ps | $grep httpd|$grep -v grep` != "" ]];then
httpd="`blue_block Httpd:``green_block "On "`"
else httpd="`blue_block Httpd:``blue_block "Off "`";fi

if [[ `ps | $grep aria2c|$grep -v grep` != "" ]];then
aria2c="`blue_block Aria2c:``green_block "On "`"
else aria2c="`blue_block Aria2c:``blue_block "Off "`";fi



eval "`$cat $aria2conf |$grep -v listen-port|$grep -v ssh-host-key-md|$tr -d '-' |$sed 's/=/=\"/g'|$tr '\n' '@'|$sed 's/@/"\n/g'|$tr '\n' '@'|$sed 's/@"//g'|tr '@' '\n'`"
dir="`$cat $aria2conf|$grep dir|$sed 's/dir=//g'`"
sshhostkeymd="`$cat $aria2conf|$grep ssh-host-key-md|$sed 's/ssh-host-key-md=//g'|$tr -d '#'`"
listenport="`$cat $aria2conf|$grep -v dht-listen-port|$grep -v rpc-listen-port|$grep listen-port|$sed 's/listen-port=//g'`"
dhtlistenport="`$cat $aria2conf|$grep dht-listen-port|$sed 's/dht-listen-port=//g'`"
peeridprefix="`$cat $aria2conf|$grep peer-id-prefix|$sed 's/peer-id-prefix=//g'`"
rpclistenport="`$cat $aria2conf|$grep rpc-listen-port|$sed 's/rpc-listen-port=//g'`"
source $ariangconf

if  [[ $savesession == "" ]];then
write_conf save-session "$sdcardpath/aria2.session";fi
if  [[ $netrcpath == "" ]];then
write_conf conf-path "$sdcardpath/netrc";fi
if  [[ $dhtfilepath == "" ]];then
write_conf dht-file-path "$sdcardpath/dht.dat";fi
if  [[ $dhtfilepath6 == "" ]];then
write_conf dht-file-path6 "$sdcardpath/dht6.dat";fi
if  [[ $confpath == "" ]];then
write_conf conf-path "$sdcardpath/aria2.conf";fi
if  [[ $inputfile == "" ]];then
write_conf input-file "$sdcardpath/aria2.session";fi
if  [[ $dir == "" ]];then
write_conf dir "$sdcardpath/ZZ-Aria2-Download"
if [[ ! -e "$sdcardpath/ZZ-Aria2-Download" ]];then 
mkdir "$sdcardpath/ZZ-Aria2-Download";fi;fi
if [[ $inputfile != "" && ! -e $inputfile ]];then 
echo "" >$inputfile;fi

######载入语言
if [[ $language != "" ]];then
language_start="$($cat "$languageconf"|$sed -n "/$language-start/=")"
language_end="$($cat "$languageconf"|$sed -n "/$language-end/=")"
language_conf="$($cat "$languageconf"|$sed -n "$language_start,$language_end"p"")"
eval "$language_conf"
fi



if [[ $1 == restart ]];then
if [[ $restart == true ]];then
$busybox killall -9 aria2c >/dev/null 2>&1
if [[ $static == true ]];then
aria2c --conf-path=$aria2conf --async-dns  --async-dns-server=`getprop net.dns1`,`getprop net.dns2` -D 
else aria2c --conf-path=$aria2conf -D;fi;fi;fi


if [[ $1 == start ]];then
ariang stop
if [[ $static == true ]];then
aria2c --conf-path=$aria2conf --async-dns  --async-dns-server=`getprop net.dns1`,`getprop net.dns2` -D
else aria2c --conf-path=$aria2conf -D;fi
httpd -p 9090 -h /system/etc/www
elif [[ $1 == stop ]];then
$busybox killall -9 aria2c >/dev/null 2>&1
$busybox killall lighttpd >/dev/null 2>&1
elif [[ $1 == "about" ]];then
$clear
display midle "Terminal AriaNg Tools" - blue_block
display midle "This is a quick AriaNg controler for Neoterm" "-" blue_block
display midle "Allows editting settings quickly in terminal without a filemanager " "-" blue_block
display midle "Terminal part of thist project was found by TICK TOCK" "-" blue_block
display midle "See open source project Aria2Ng on https://github.com/ mayswind/AriaNg" "-" blue_block
display midle "See open source project aria2 on https://github.com/aria2/aria2" "-" blue_block
display midle "Thanks to developers of lighttpd,busybox...." "-" blue_block
display midle "Contact me on QQ:uiniui@126.com" "-" blue_block

read command
if [[ $command == "" ]];then
ariang
elif [[ $command == "99" ]];then $clear;display midle "Goodbye";exit
else ariang;fi
fi



if [[ $1 == "" ]];then
stat 
display midle "$Activate" - "" on 1 
display midle "$Stop" - "" on 2
display midle "$Settings" - "" on 3
display midle "$Openweb" - "" on 4
display midle "$About" - "" on 5
display midle "$Leave" - "" on 0
read command
if [[ $command == 1 ]];then ariang start;ariang
elif [[ $command == 2 ]];then ariang stop;ariang
elif [[ $command == 3 ]];then ariang conf
elif [[ $command == 4 ]];then
if [[ `whoami` != root ]];then
display midle "Sorry,you're not user ROOT" -
display midle "Type enter to return to homepage" -
read command;ariang
else am start -a android.intent.action.VIEW -d http://127.0.0.1:8080 > /dev/null 2>&1 &
display midle "opening internet exprorer............" -;fi;exit
elif [[ $command == 5 ]];then
ariang about
elif [[ $command == 0 ]];then
$clear;display midle "$Exited" -;exit
else ariang
fi
elif [[ $1 == conf ]];then
stat
display midle "$Basicsettings" - "" on 1
display midle "$HFSsettings" - "" on 2
display midle "$Httpsettings" - "" on 3
display midle "$FSsettings" - "" on 4
display midle "$Bittorrentsettings" - "" on 5
display midle "$Metalinksettings" - "" on 6
display midle "$Rpcsettings" - "" on 7
display midle "$Supersettings" - "" on 8
display midle "$Terminalsettings" - "" on 9
display midle "$Backmainpage" - "" onn 00
display midle "$Leave" - "" on 0
read command
if [[ $command == 1 ]];then ariang basicsetting
elif [[ $command == 2 ]];then ariang hfssetting
elif [[ $command == 3 ]];then ariang httpsetting
elif [[ $command == 4 ]];then ariang fssetting
elif [[ $command == 5 ]];then ariang bittorrentsetting
elif [[ $command == 6 ]];then ariang metalinksetting
elif [[ $command == 7 ]];then ariang rpcsetting
elif [[ $command == 8 ]];then ariang supersetting
elif [[ $command == 9 ]];then ariang terminalsetting
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "$Exited" -;exit
else ariang conf;fi

elif [[ $1 == basicsetting ]];then
stat
display midle "Basicsettings" -
display side "1 "$Dir"" "$dir" " "
display side "2 "$Log"" "$log" " "
display side "3 "$Maxdownloadsametime"" "$maxconcurrentdownloads" " "
display side "4 "$Checkintegrity"" "$checkintegrity" " "
display side "5 "$Continue"" "$continue" " "
display midle "$Backmainpage" - "" onn 00
display midle "$Leave" - "" on 0
read command
if [[ $command == 1 ]];then
display midle "$MassageDir" -
read command
if [[ $command != "" ]];then
if [[ -e $command ]];then
write_conf dir "$command";ariang restart;ariang basicsetting;else display midle "Directory does not exist" -;sleep 0.6;ariang basicsetting;fi
else ariang basicsetting;fi
elif [[ $command == 2 ]];then
display midle "$MassageLog1" -
display midle "$MassageLog2" -
read command
if [[ $command != "" ]];then
if [[ -e $command ]];then
write_conf log "$command";ariang restart;ariang basicsetting;else display midle "File does not exist" -;sleep 0.6;ariang basicsetting;fi
else write_conf log "";ariang basicsetting;fi
elif [[ $command == 3 ]];then
display midle "$MassageMaxconcurrentdownloads" -
read command
if [[ $command != "" ]];then
write_conf max-concurrent-downloads $command;ariang restart;ariang basicsetting;else ariang basicsetting;fi
elif [[ $command == 4 ]];then
if [[ $checkintegrity == true ]];then
write_conf check-integrity false
else write_conf check-integrity true;fi;ariang restart;ariang basicsetting
elif [[ $command == 5 ]];then
if [[ $continue == true ]];then
write_conf continue false
else write_conf continue true;fi;ariang restart;ariang basicsetting
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "$Exited" -;exit
else ariang basicsetting;fi

elif [[ $1 == hfssetting ]];then
stat
display midle "Http/Ftp/SftpSettings" -
display side "1 "$Allproxy"" "$allproxy" " "
display side "2 "$Allproxyuser"" "$allproxyuser" " "
display side "3 "$Allproxypasswd"" "$allproxypasswd" " "
display side "4 "$Connecttimeout"" "$connecttimeout" " "
display side "5 "$Dryrun"" "$dryrun" " "
display side "6 "$Lowestspeedlimit"" "$lowestspeedlimit" " "
display side "7 "$Maxconnectionperserver"" "$maxconnectionperserver" " "
display side "8 "$Maxfilenotfound"" "$maxfilenotfound" " "
display side "9 "$Maxtries"" "$maxtries" " "
display side "10 "$Minsplitsize"" "$minsplitsize" " "
display side "11 "$Netrcpath"" "$netrcpath" " "
display side "12 "$Nonetrc"" "$nonetrc" " "
display side "13 "$Proxymethod"" "$proxymethod" " "
display side "14 "$Remotetime"" "$remotetime" " "
display side "15 "$Reuseuri"" "$reuseuri" " "
display side "16 "$Retrywait"" "$retrywait" " "
display side "17 "$Serverstatof"" "$serverstatof" " "
display side "18 "$Serverstattimeout"" "$serverstattimeout" " "
display side "19 "$Split"" "$split" " "
display side "20 "$Streampieceselector"" "$streampieceselector" " "
display side "21 超时时间" "$timeout" " "
display side "22 URI选择算法" "$uriselector" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
display midle "输入全部任务代理服务器" -
read command
write_conf all-proxy $command;ariang restart;ariang hfssetting 
elif [[ $command == 2 ]];then
display midle "输入代理服务器用户" -
read command
write_conf all-proxy-user $command;ariang restart;ariang hfssetting 
elif [[ $command == 3 ]];then
display midle "输入代理服务器密码" -
read command
write_conf all-proxy-passwd $command;ariang restart;ariang hfssetting 
elif [[ $command == 4 ]];then
display midle "输入服务器连接超时时间" -
read command
write_conf connect-timeout $command;ariang restart;ariang hfssetting 
elif [[ $command == 5 ]];then
if [[ $dryrun == true ]];then write_conf dry-run false
else write_conf dry-run true;fi
ariang restart;ariang hfssetting 
elif [[ $command == 6 ]];then 
display midle "最小速度限制,低于此值将停止任务" -
display midle "输入0则禁用,不可为空值" -
read command
if [[ $command != "" ]];then
write_conf lowest-speed-limit $command;fi;ariang restart;ariang hfssetting 
elif [[ $command == 7 ]];then
display midle "输入单服务器最大连接数" -
display midle "官方版本默认最大限制为16" -
read command
if [[ $command != "" ]];then
write_conf max-connection-per-server $command;fi;ariang restart;ariang hfssetting 
elif [[ $command == 8 ]];then
display midle "输入文件未找到重试次数" -
display midle "填0则为禁用,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-file-not-found $command;fi;ariang restart;ariang hfssetting 
elif [[ $command == 9 ]];then
display midle "输入任务最大尝试次数" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-tries $command;fi;ariang restart;ariang hfssetting 
elif [[ $command == 10 ]];then
display midle "输入最小文件分片大小" -
display midle "值越小相对下载源越多" -
read command
write_conf min-split-size $command;ariang restart;ariang hfssetting 
elif [[ $command == 11 ]];then
display midle "输入netrc文件路径" -
read command
write_conf netrc-path $command;ariang restart;ariang hfssetting 
elif [[ $command == 12 ]];then
if [[ $nonetrc == true ]];then write_conf no-netrc false
else write_conf no-netrc true;fi
ariang restart;ariang hfssetting 
elif [[ $command == 13 ]];then
if [[ $proxymethod == tunnel ]];then write_conf proxy-method get
else write_conf proxy-method tunnel;fi
ariang restart;ariang hfssetting 
elif [[ $command == 14 ]];then
 if [[ $remotetime == true ]];then write_conf remote-time false
else write_conf remote-time true;fi
ariang restart;ariang hfssetting 
elif [[ $command == 15 ]];then
if [[ $reuseuri == true ]];then write_conf reuse-uri false
else write_conf reuse-uri true;fi
ariang restart;ariang hfssetting 
elif [[ $command == 16 ]];then
display midle "输入任务重试等待时间" -
display midle "0为服务器响应后重试,不可为空" -
read command
if [[ $command != "" ]];then
write_conf retry-wait $command;fi;ariang restart;ariang hfssetting 
elif [[ $command == 17 ]];then
display midle "输入指定保存服务器状态的文件" -
read command
write_conf server-stat-of $command;ariang restart;ariang hfssetting 
elif [[ $command == 18 ]];then
display midle "输入指定服务器状态超时时间" -
read command
write_conf server-stat-timeout $command;ariang restart;ariang hfssetting 
elif [[ $command == 19 ]];then
display midle "输入单任务连接数" -
display midle "受到单服务器最大连接数限制" -
read command
write_conf split $command;ariang restart;ariang hfssetting 
elif [[ $command == 20 ]];then
display midle "Inorder模式有助于边下边播" -
display midle "Default模式最合理分配资源" -
display midle "Geom模式选择最小索引分片" -
display midle "Random模式随机选择分片" -
read command
if [[ $streampieceselector == default  ]];then write_conf stream-piece-selector inorder
elif [[ $streampieceselector == inorder  ]];then write_conf stream-piece-selector random
elif [[ $streampieceselector == random  ]];then write_conf stream-piece-selector geom
elif [[ $streampieceselector == geom  ]];then write_conf stream-piece-selector default;fi;ariang restart;ariang hfssetting 
elif [[ $command == 21 ]];then
display midle "输入全部任务超时时间(s)" -
display midle "该值不能为空" -
read command
if [[ $command != "" ]];then
write_conf timeout $command server-stat-timeout;fi;ariang restart;ariang hfssetting 
elif [[ $command == 22 ]];then
display midle "Inorder模式顺序测试" -
display midle "Feedback模式选择最快链接" -
display midle "adaptive模式选择最合适镜像" -
read command
if [[ $uriselector ==  inorder ]];then write_conf uri-selector feedback
elif [[ $uriselector == feedback  ]];then write_conf uri-selector adaptive
elif [[ $uriselector == adaptive  ]];then write_conf uri-selector inorder;fi;ariang restart;ariang hfssetting 
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang hfssetting;fi

elif [[ $1 == httpsetting ]];then 
stat
display midle "Httpsettings" -
display side "1 检查证书" "$checkcertificate" " "
display side "2 支持GZIP" "$httpacceptgzip" " "
display side "3 认证咨询" "$httpauthchallenge" " "
display side "4 禁用缓存" "$httpnocache" " "
display side "5 HTTP默认用户名" "$httpuser" " "
display side "6 HTTP默认密码" "$httppasswd" " "
display side "7 HTTP代理服务器地址" "$httpproxy" " "
display side "8 HTTP代理服务器用户" "$httpproxyuser" " "
display side "9 HTTP代理服务器密码" "$httpproxypasswd" " "
display side "10 HTTPS代理服务器地址" "$httpsproxy" " "
display side "11 HTTPS代理服务器用户" "$httpsproxyuser" " "
display side "12 HTTPS代理服务器密码" "$httpsproxypasswd" " "
display side "13 请求来源" "$referer" " "
display side "14 是否开启持久链接" "$enablehttpkeepalive" " "
display side "15 是否开启协议管线化" "$enablehttppipelining" " "
display side "16 Cookie保存路径" "$savecookies" " "
display side "17 启用Head方法" "$usehead" " "
display side "18 自定义UA" "$useragent" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $checkcertificate == true ]];then write_conf check-certificate false
else write_conf check-certificate true;fi
ariang restart;ariang httpsetting
elif [[ $command == 2 ]];then
if [[ $httpacceptgzip == true ]];then write_conf http-accept-gzip false
else write_conf http-accept-gzip true;fi
ariang restart;ariang httpsetting
elif [[ $command == 3 ]];then
if [[ $httpauthchallenge == true ]];then write_conf http-auth-challenge false
else write_conf http-auth-challenge true;fi
ariang restart;ariang httpsetting
elif [[ $command == 4 ]];then
if [[ $httpnocache == true ]];then write_conf http-no-cache false
else write_conf http-no-cache true;fi
ariang restart;ariang httpsetting
elif [[ $command == 5 ]];then
display midle "输入默认HTTP用户名" -
read command
write_conf http-user $command;ariang restart;ariang httpsetting 
elif [[ $command == 6 ]];then
display midle "输入默认HTTP密码" -
read command
write_conf http-passwd $command;ariang restart;ariang httpsetting 
elif [[ $command == 7 ]];then
display midle "输入HTTP代理服务器地址" -
read command
write_conf http-proxy $command;ariang restart;ariang httpsetting 
elif [[ $command == 8 ]];then
display midle "输入HTTP代理服务器用户名" -
read command
write_conf http-proxy-user $command;ariang restart;ariang httpsetting 
elif [[ $command == 9 ]];then
display midle "输入HTTP代理服务器密码" -
read command
write_conf http-proxy-passwd $command;ariang restart;ariang httpsetting 
elif [[ $command == 10 ]];then
display midle "输入HTTPS代理服务器地址" -
read command
write_conf https-proxy $command;ariang restart;ariang httpsetting 
elif [[ $command == 11 ]];then
display midle "输入HTTPS代理服务器用户名" -
read command
write_conf https-proxy-user $command;ariang restart;ariang httpsetting 
elif [[ $command == 12 ]];then
display midle "输入HTTPS代理服务器密码" -
read command
write_conf https-proxy-passwd $command;ariang restart;ariang httpsetting 
elif [[ $command == 13 ]];then
display midle "输入请求来源" -
read command
write_conf referer $command;ariang restart;ariang httpsetting 
elif [[ $command == 14 ]];then
if [[ $enablehttpkeepalive == true ]];then write_conf enable-http-keep-alive false
else write_conf enable-http-keep-alive true;fi
ariang restart;ariang httpsetting
elif [[ $command == 15 ]];then
if [[ $enablehttppipelining == true ]];then write_conf enable-http-pipelining false
else write_conf enable-http-pipelining true;fi
ariang restart;ariang httpsetting
elif [[ $command == 16 ]];then
display midle "输入Cookie保存路径" -
read command
write_conf save-cookies $command;ariang restart;ariang httpsetting 
elif [[ $command == 17 ]];then
if [[ $usehead == true ]];then write_conf use-head false
else write_conf use-head true;fi
ariang restart;ariang httpsetting
elif [[ $command == 18 ]];then
display midle "输入自定义UA" -
read command
write_conf user-agent $command;ariang restart;ariang httpsetting 
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang httpsetting;fi


elif [[ $1 == fssetting ]];then 
stat
display midle "Ftp/SftpSettings" -
display side "1 FTP默认用户" "$ftpuser" " "
display side "2 FTP默认密码" "$ftppasswd" " "
display side "3 开启被动模式" "$ftppasv" " "
display side "4 FTP代理服务器" "$ftpproxy" " "
display side "5 FTP代理服务器用户" "$ftpproxyuser" " "
display side "6 FTP代理服务器密码" "$ftpproxypasswd" " "
display side "7 传输类型" "$ftptype" " "
display side "8 连接复用" "$ftpreuseconnection" " "
display side "9 SSH公钥检验和" "$sshhostkeymd" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
display midle "输入FTP默认用户名" -
read command
write_conf ftp-user $command;ariang restart;ariang fssetting 
elif [[ $command == 2 ]];then
display midle "输入FTP默认密码" -
read command
write_conf ftp-passwd $command;ariang restart;ariang fssetting
elif [[ $command == 3 ]];then
if [[ $ftppasv == true ]];then write_conf ftp-pasv false
else write_conf ftp-pasv true;fi
ariang restart;ariang fssetting
elif [[ $command == 4 ]];then
display midle "输入FTP代理服务器" -
read command
write_conf ftp-proxy $command;ariang restart;ariang fssetting
elif [[ $command == 5 ]];then
display midle "输入FTP代理服务器用户" -
read command
write_conf ftp-proxy-user $command;ariang restart;ariang fssetting
elif [[ $command == 6 ]];then
display midle "输入FTP代理服务器密码" -
read command
write_conf ftp-proxy-passwd $command;ariang restart;ariang fssetting
elif [[ $command == 7 ]];then
if [[ $ftptype == ascii ]];then write_conf ftp-type binary
else write_conf ftp-type ascii;fi
ariang restart;ariang fssetting
elif [[ $command == 8 ]];then
if [[ $ftpreuseconnection == true ]];then write_conf ftp-reuse-connection false
else write_conf ftp-reuse-connection true;fi
ariang restart;ariang fssetting
elif [[ $command == 9 ]];then
display midle "输入检验值" -
display midle "输入off则为不设置" -
read command
if [[ $command != "" ]];then
if [[ $command == off ]];then
echo "`$cat $aria2conf |$sed "/ssh-host-key-md=/c #ssh-host-key-md="`" >$aria2conf
else write_conf ssh-host-key-md $command;fi
else ariang fssetting;fi;ariang restart;ariang fssetting 
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang fssetting;fi

elif [[ $1 == bittorrentsetting ]];then 
stat
display midle "BitTorrentSettings" -
display side "1 分离仅做种任务" "$btdetachseedonly" " "
display side "2 启用哈希检查完成事件" "$btenablehookafterhashcheck" " "
display side "3 启用本地节点发现(LPD)" "$btenablelpd" " "
display side "4 外部 IP 地址" "$btexternalip" " "
display side "5 强制加密 " "$btforceencryption" " "
display side "6 做种前检查文件哈希" "$bthashcheckseed" " "
display side "7 最多打开文件数" "$btmaxopenfiles" " "
display side "8 最大连接节点数" "$btmaxpeers" " "
display side "9 仅下载种子文件" "$btmetadataonly" " "
display side "10 最低加密级别" "$btmincryptolevel" " "
display side "11 优先下载" "$btprioritizepiece" " "
display side "12 删除未选择的文件" "$btremoveunselectedfile" " "
display side "13 需要加密" "$btrequirecrypto" " "
display side "14 期望下载速度" "$btrequestpeerspeedlimit" " "
display side "15 保存种子文件" "$btsavemetadata" " "
display side "16 不检查已经下载的文件" "$btseedunverified" " "
display side "17 无速度时自动停止时间" "$btstoptimeout" " "
display side "18 服务器连接超时时间" "$bttrackerconnecttimeout" " "
display side "19 服务器连接间隔时间" "$bttrackerinterval" " "
display side "20 服务器超时时间" "$bttrackertimeout" " "
display side "21 DHT(IPv4)文件" "$dhtfilepath" " "
display side "22 DHT(IPv6)文件" "$dhtfilepath6" " "
display side "23 DHT监听端口" "$dhtlistenport" " "
display side "24 DHT消息超时时间" "$dhtmessagetimeout" " "
display side "25 启用DHT(IPv4)" "$enabledht" " "
display side "26 启用DHT(IPv6)" "$enabledht6" " "
display side "27 启用节点交换" "$enablepeerexchange" " "
display side "28 下载种子中的文件" "$followtorrent" " "
display side "29 监听端口" "$listenport" " "
display side "30 全局最大上传速度" "$maxoveralluploadlimit" " "
display side "31 最大上传速度" "$maxuploadlimit" " "
display side "32 节点ID前缀" "$peeridprefix" " "
display side "33 最小分享率 " "$seedratio" " "
display side "34 最小做种时间" "$seedtime" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $btdetachseedonly == true ]];then write_conf bt-detach-seed-only false
else write_conf bt-detach-seed-only true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 2 ]];then
if [[ $btenablehookafterhashcheck == true ]];then write_conf bt-enable-hook-after-hash-check false
else write_conf bt-enable-hook-after-hash-check true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 3 ]];then
if [[ $btenablelpd == true ]];then write_conf bt-enable-lpd false
else write_conf bt-enable-lpd true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 4 ]];then
display midle "输入外部IP地址" -
read command
write_conf bt-external-ip $command;ariang restart;ariang bittorrentsetting
elif [[ $command == 5 ]];then
if [[ $btforceencryption == true ]];then write_conf bt-force-encryption false
else write_conf bt-force-encryption true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 6 ]];then
if [[ $bthashcheckseed == true ]];then write_conf bt-hash-check-seed false
else write_conf bt-hash-check-seed true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 7 ]];then
display midle "最多打开文件数" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-max-open-files $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 8 ]];then
display midle "最大连接节点数" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-max-peers $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 9 ]];then
if [[ $btmetadataonly == true ]];then write_conf bt-metadata-only false
else write_conf bt-metadata-only true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 10 ]];then
if [[ $btmincryptolevel == plain ]];then write_conf bt-min-crypto-level arc4
else write_conf bt-min-crypto-level plain;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 11 ]];then
display midle "输入优先下载规则" -
read command
write_conf bt-prioritize-piece $command;ariang restart;ariang bittorrentsetting
elif [[ $command == 12 ]];then
if [[ $btremoveunselectedfile == true ]];then write_conf bt-remove-unselected-file false
else write_conf bt-remove-unselected-file true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 13 ]];then
if [[ $btrequirecrypto == true ]];then write_conf bt-require-crypto false
else write_conf bt-require-crypto true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 14 ]];then
display midle "输入期望下载速度" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-request-peer-speed-limit $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 15 ]];then
if [[ $btsavemetadata == true ]];then write_conf bt-save-metadata false
else write_conf bt-save-metadata true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 16 ]];then
if [[ $btseedunverified == true ]];then write_conf bt-seed-unverified false
else write_conf bt-seed-unverified true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 17 ]];then
display midle "无速度时自动停止时间" -
display midle "填0则为禁用,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-stop-timeout $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 18 ]];then
display midle "服务器连接超时时间" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-tracker-connect-timeout $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 19 ]];then
display midle "服务器连接间隔时间" -
display midle "填0则为根据情况处理,不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-tracker-interval $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 20 ]];then
display midle "服务器超时时间" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf bt-tracker-timeout $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 21 ]];then
display midle "输入DHT-ipv4文件路径,不可错" -
read command
if [[ $command != "" ]];then
write_conf dht-file-path $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 22 ]];then
display midle "输入DHT-ipv6文件路径,不可错" -
read command
if [[ $command != "" ]];then
write_conf dht-file-path6 $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 23 ]];then
display midle "输入DHT监听端口,可填范围" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf dht-listen-port $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 24 ]];then
display midle "输入DHT消息超时时间" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf dht-message-timeout $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 25 ]];then
if [[ $enabledht == true ]];then write_conf enable-dht false
else write_conf enable-dht true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 26 ]];then
if [[ $enabledht6 == true ]];then write_conf enable-dht6 false
else write_conf enable-dht6 true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 27 ]];then
if [[ $enablepeerexchange == true ]];then write_conf enable-peer-exchange false
else write_conf enable-peer-exchange true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 28 ]];then
if [[ $followtorrent == true ]];then write_conf follow-torrent false
else write_conf follow-torrent true;fi
ariang restart;ariang bittorrentsetting
elif [[ $command == 29 ]];then
display midle "输入BT监听端口,可填范围" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf listen-port $command dht-listen-port rpc-listen-port;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 30 ]];then
display midle "输入全局最大上传速度" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-overall-upload-limit $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 31 ]];then
display midle "输入最大上传速度" -
display midle "填0则为不限制,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-upload-limit $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 32 ]];then
display midle "输入节点ID前缀" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf peer-id-prefix $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 33 ]];then
display midle "输入BT最小共享率" -
display midle "填0.1则为不共享,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf seed-ratio $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == 34 ]];then
display midle "输入BT享率时长" -
display midle "填0则为不共享,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf seed-time $command;fi;ariang restart;ariang bittorrentsetting 
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang bittorrentsetting;fi

elif [[ $1 == metalinksetting ]];then 
stat 
display midle "MetalinkSettings" -
display side "1 下载Metalink中的文件" "$followmetalink" " "
display side "2 基础URI" "$metalinkbaseuri" " "
display side "3 语言" "$metalinklanguage" " "
display side "4 首选服务器位置" "$metalinklocation" " "
display side "5 操作系统" "$metalinkos" " "
display side "6 版本号" "$metalinkversion" " "
display side "7 首选使用协议" "$metalinkpreferredprotocol" " "
display side "8 仅使用唯一协议" "$metalinkenableuniqueprotocol" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $followmetalink == true ]];then write_conf follow-metalink mem
elif [[ $followmetalink == mem ]];then write_conf follow-metalink false
elif [[ $followmetalink == false ]];then write_conf follow-metalink true;fi
ariang restart;ariang metalinksetting
elif [[ $command == 2 ]];then
display midle "输入基础URI" -
read command
write_conf metalink-base-uri $command;ariang restart;ariang metalinksetting
elif [[ $command == 3 ]];then
display midle "输入语言设置" -
read command
write_conf metalink-language $command;ariang restart;ariang metalinksetting
elif [[ $command == 4 ]];then
display midle "输入服务器首选位置" -
read command
write_conf metalink-location $command;ariang restart;ariang metalinksetting
elif [[ $command == 5 ]];then
display midle "输入操作系统" -
read command
write_conf metalink-os $command;ariang restart;ariang metalinksetting
elif [[ $command == 6 ]];then
display midle "输入版本号" -
read command
write_conf metalink-version $command;ariang restart;ariang metalinksetting
elif [[ $command == 7 ]];then
if [[ $metalinkpreferredprotocol == http ]];then write_conf metalink-preferred-protocol https
elif [[ $metalinkpreferredprotocol == https ]];then write_conf metalink-preferred-protocol ftp
elif [[ $metalinkpreferredprotocol == ftp ]];then write_conf metalink-preferred-protocol none
elif [[ $metalinkpreferredprotocol == none ]];then write_conf metalink-preferred-protocol http;fi
ariang restart;ariang metalinksetting
elif [[ $command == 8 ]];then
if [[ $metalinkenableuniqueprotocol == true ]];then write_conf metalink-enable-unique-protocol false
else write_conf metalink-enable-unique-protocol true;fi
ariang restart;ariang metalinksetting
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang metalinksetting;fi

elif [[ $1 == rpcsetting ]];then
stat
display midle "RpcSettings" -
display side "1 开启RPC服务器" "$enablerpc" " "
display side "2 种子文件下载完后暂停" "$pausemetadata" " "
display side "3 接受所有远程请求" "$rpcalloworiginall" " "
display side "4 在所有网卡上监听 " "$rpclistenall" " "
display side "5 监听端口" "$rpclistenport" " "
display side "6 最大请求大小" "$rpcmaxrequestsize" " "
display side "7 保存上传的种子文件" "$rpcsaveuploadmetadata" " "
display side "8 启用SSL/TLS" "$rpcsecure" " "
display side "9 RPC认证密匙" "$rpcsecret" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $enablerpc == true ]];then write_conf enable-rpc false
else write_conf enable-rpc true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 2 ]];then
if [[ $pausemetadata == true ]];then write_conf pause-metadata false
else write_conf pause-metadata true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 3 ]];then
if [[ $rpcalloworiginall == true ]];then write_conf rpc-allow-origin-all false
else write_conf rpc-allow-origin-all true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 4 ]];then
if [[ $rpclistenall == true ]];then write_conf rpc-listen-all false
else write_conf rpc-listen-all true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 5 ]];then
display midle "输入RPC监听端口" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf rpc-listen-port $command;fi;ariang restart;ariang rpcsetting 
elif [[ $command == 6 ]];then
display midle "输入最大请求值" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf rpc-max-request-size $command;fi;ariang restart;ariang rpcsetting 
elif [[ $command == 7 ]];then
if [[ $rpcsaveuploadmetadata == true ]];then write_conf rpc-save-upload-metadata false
else write_conf rpc-save-upload-metadata true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 8 ]];then
if [[ $rpcsecure == true ]];then write_conf rpc-secure false
else write_conf rpc-secure true;fi
ariang restart;ariang rpcsetting
elif [[ $command == 9 ]];then
display midle "输入RPC认证密匙" -
display midle "输入off则为禁用" -
read command
if [[ $command != "" ]];then
if [[ $command == off ]];then
echo "`$cat $aria2conf |$sed "/rpc-secret=/c #rpc-secret="`" >$aria2conf
else write_conf rpc-secret $command;fi
else ariang rpcsetting;fi;ariang restart;ariang rpcsetting 
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang rpcsetting;fi


elif [[ $1 == supersetting ]];then
stat
display midle "SuperSettings" -
display side "1 允许覆盖" "$allowoverwrite" " "
display side "2 允许分片大小变化" "$allowpiecelengthchange" " "
display side "3 始终断点续传" "$alwaysresume" " "
display side "4 异步DNS" "$asyncdns" " "
display side "5 文件自动重命名" "$autofilerenaming" " "
display side "6 自动保存间隔" "$autosaveinterval" " "
display side "7 条件下载" "$conditionalget" " "
display side "8 配置文件路径" "$confpath" " "
display side "9 控制台日志级别" "$consoleloglevel" " "
display side "10 使用UTF8处理Content-Disposition" "$contentdispositiondefaultutf8" " "
display side "11 启用后台进程" "$daemon" " "
display side "12 延迟加载" "$deferredinput" " "
display side "13 禁用IPv6" "$disableipv6" " "
display side "14 磁盘缓存" "$diskcache" " "
display side "15 下载结果" "$downloadresult" " "
display side "16 DSCP" "$dscp" " "
display side "17 最多打开的文件描述符" "$rlimitnofile" " "
display side "18 终端输出使用颜色" "$enablecolor" " "
display side "19 启用MMap" "$enablemmap" " "
display side "20 事件轮询方法" "$eventpoll" " "
display side "21 文件分配方法" "$fileallocation" " "
display side "22 强制保存" "$forcesave" " "
display side "23 保存未找到的文件" "$savenotfound" " "
display side "24 仅哈希检查" "$hashcheckonly" " "
display side "25 控制台可读输出" "$humanreadable" " "
display side "26 保留未完成的任务" "$keepunfinisheddownloadresult" " "
display side "27 最多下载结果" "$maxdownloadresult" " "
display side "28 MMap最大限制" "$maxmmaplimit" " "
display side "29 最大断点续传尝试次数" "$maxresumefailuretries" " "
display side "30 最低TLS版本" "$mintlsversion" " "
display side "31 日志级别" "$loglevel" " "
display side "32 优化并发下载" "$optimizeconcurrentdownloads" " "
display side "33 文件分片大小" "$piecelength" " "
display side "34 显示控制台输出" "$showconsolereadout" " "
display side "35 下载摘要输出间隔" "$summaryinterval" " "
display side "36 全局最大下载速度" "$maxoveralldownloadlimit" " "
display side "37 最大下载速度" "$maxdownloadlimit" " "
display side "38 禁用配置文件" "$noconf" " "
display side "39 文件分配限制" "$nofileallocationlimit" " "
display side "40 启用参数化URI支持" "$parameterizeduri" " "
display side "41 禁用控制台输出" "$quiet" " "
display side "42 实时数据块验证" "$realtimechunkchecksum" " "
display side "43 删除控制文件" "$removecontrolfile" " "
display side "44 状态保存文件" "$savesession" " "
display side "45 保存状态间隔" "$savesessioninterval" " "
display side "46 Socket接收缓冲区大小" "$socketrecvbuffersize" " "
display side "47 自动关闭时间" "$stop" " "
display side "48 缩短控制台输出内容" "$truncateconsolereadout" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $allowoverwrite == true ]];then write_conf allow-overwrite false
else write_conf allow-overwrite true;fi
ariang restart;ariang supersetting

elif [[ $command == 2 ]];then
if [[ $allowpiecelengthchange == true ]];then write_conf allow-piece-length-change false
else write_conf allow-piece-length-change true;fi
ariang restart;ariang supersetting

elif [[ $command == 3 ]];then
if [[ $alwaysresume == true ]];then write_conf always-resume false
else write_conf always-resume true;fi
ariang restart;ariang supersetting

elif [[ $command == 4 ]];then
if [[ $asyncdns == true ]];then write_conf async-dns false
else write_conf async-dns true;fi
ariang restart;ariang supersetting

elif [[ $command == 5 ]];then
if [[ $autofilerenaming == true ]];then write_conf auto-file-renaming false
else write_conf auto-file-renaming true;fi
ariang restart;ariang supersetting

elif [[ $command == 6 ]];then
display midle "输入自动保存控制文件间隔" -
display midle "0为退出时才保存,不可为空" -
read command
if [[ $command != "" ]];then
write_conf auto-save-interval $command
else ariang supersetting;fi;ariang restart;ariang supersetting

elif [[ $command == 7 ]];then
if [[ $conditionalget == true ]];then write_conf conditional-get false
else write_conf conditional-get true;fi
ariang restart;ariang supersetting

elif [[ $command == 8 ]];then
display midle "输入配置文件路径" -
display midle "不可出错,不建议更改" -
read command
if [[ $command != "" ]];then
if [[ -e $command ]];then
write_conf conf-path $command
else display midle "文件不存在" -;fi
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 9 ]];then
if [[ $consoleloglevel == debug ]];then write_conf console-log-level info
elif [[ $consoleloglevel == info ]];then write_conf console-log-level notice
elif [[ $consoleloglevel == notice ]];then write_conf console-log-level warn
elif [[ $consoleloglevel == warn ]];then write_conf console-log-level error 
elif [[ $consoleloglevel == error ]];then write_conf console-log-level debug;fi
ariang restart;ariang supersetting

elif [[ $command == 10 ]];then
if [[ $contentdispositiondefaultutf8 == true ]];then write_conf content-disposition-default-utf8 false
else write_conf content-disposition-default-utf8 true;fi
ariang restart;ariang supersetting

elif [[ $command == 11 ]];then
if [[ $daemon == true ]];then write_conf daemon false
else write_conf daemon true;fi
ariang restart;ariang supersetting

elif [[ $command == 12 ]];then
if [[ $deferredinput == true ]];then write_conf deferred-input false
else write_conf deferred-input true;fi
ariang restart;ariang supersetting

elif [[ $command == 13 ]];then
if [[ $disableipv6 == true ]];then write_conf disable-ipv6 false
else write_conf disable-ipv6 true;fi
ariang restart;ariang supersetting

elif [[ $command == 14 ]];then
display midle "输入磁盘缓存" -
display midle "0为禁用,不可为空" -
read command
if [[ $command != "" ]];then
write_conf disk-cache $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 15 ]];then
if [[ $downloadresult == default ]];then write_conf download-result full max-download-result keep-unfinished-download-result
elif [[ $downloadresult == full ]];then write_conf download-result hide max-download-result keep-unfinished-download-result
elif [[ $downloadresult == hide ]];then write_conf download-result default max-download-result keep-unfinished-download-result;fi
ariang restart;ariang supersetting

elif [[ $command == 16 ]];then
display midle "输入DSCP" -
display midle "0为默认,不可为空" -
read command
if [[ $command != "" ]];then
write_conf dscp $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 17 ]];then
display midle "输入最大打开文件描述符" -
display midle "该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf rlimit-nofile $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 18 ]];then
if [[ $enablecolor == true ]];then write_conf enable-color false
else write_conf enable-color true;fi
ariang restart;ariang supersetting

elif [[ $command == 19 ]];then
if [[ $enablemmap == true ]];then write_conf enable-mmap false
else write_conf enable-mmap true;fi
ariang restart;ariang supersetting

elif [[ $command == 20 ]];then
display midle "Cannot be changed" -
read command;ariang supersetting

elif [[ $command == 21 ]];then
if [[ $fileallocation == nano ]];then write_conf file-allocation prealloc
elif [[ $fileallocation == prealloc ]];then write_conf file-allocation trunc
elif [[ $fileallocation == trunc ]];then write_conf file-allocation falloc
elif [[ $fileallocation == falloc ]];then write_conf file-allocation nano;fi
ariang restart;ariang supersetting

elif [[ $command == 22 ]];then
if [[ $forcesave == true ]];then write_conf force-save false
else write_conf force-save true;fi
ariang restart;ariang supersetting

elif [[ $command == 23 ]];then
if [[ $savenotfound == true ]];then write_conf save-not-found false
else write_conf save-not-found true;fi
ariang restart;ariang supersetting

elif [[ $command == 24 ]];then
if [[ $hashcheckonly == true ]];then write_conf hash-check-only false
else write_conf hash-check-only true;fi
ariang restart;ariang supersetting

elif [[ $command == 25 ]];then
if [[ $humanreadable == true ]];then write_conf human-readable false
else write_conf human-readable true;fi
ariang restart;ariang supersetting

elif [[ $command == 26 ]];then
if [[ $keepunfinisheddownloadresult == true ]];then write_conf keep-unfinished-download-result false
else write_conf keep-unfinished-download-result true;fi
ariang restart;ariang supersetting

elif [[ $command == 27 ]];then
display midle "输入最多下载结果" -
display midle "0为不储存结果,不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-download-result $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 28 ]];then
display midle "输入MMap最大限制" -
display midle "不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-mmap-limit $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 29 ]];then
display midle "输入最大断点尝试次数" -
display midle "0为所有任务都不支持断点续传" -
display midle "才从头下载,该值不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-resume-failure-tries $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 30 ]];then    SSLv3，TLSv1，TLSv1.1，TLSv1.2
if [[ $mintlsversion == SSLv3 ]];then write_conf min-tls-version TLSv1
elif [[ $mintlsversion == TLSv1 ]];then write_conf min-tls-version TLSv1.1
elif [[ $mintlsversion == TLSv1.1 ]];then write_conf min-tls-version TLSv1.2
elif [[ $mintlsversion == TLSv1.2 ]];then write_conf min-tls-version SSLv3;fi
ariang restart;ariang supersetting

elif [[ $command == 31 ]];then
if [[ $loglevel == debug ]];then write_conf log-level info console-log-level
elif [[ $loglevel == info ]];then write_conf log-level notice console-log-level
elif [[ $loglevel == notice ]];then write_conf log-level warn console-log-level
elif [[ $loglevel == warn ]];then write_conf log-level error console-log-level
elif [[ $loglevel == error ]];then write_conf log-level debug;fi

elif [[ $command == 32 ]];then
if [[ $optimizeconcurrentdownloads == true ]];then write_conf optimize-concurrent-downloads false
else write_conf optimize-concurrent-downloads true;fi
ariang restart;ariang supersetting

elif [[ $command == 33 ]];then
display midle "输入文件分片大小" -
display midle "作为文件分割,不可为空" -
read command
if [[ $command != "" ]];then
write_conf piece-length $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 34 ]];then
if [[ $showconsolereadout == true ]];then write_conf show-console-readout false
else write_conf show-console-readout true;fi
ariang restart;ariang supersetting
elif [[ $command == 35 ]];then
display midle "输入下载摘要输出间隔" -
display midle "0为不输出,不可为空" -
read command
if [[ $command != "" ]];then
write_conf summary-interval $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 36 ]];then
display midle "输入全体任务最大下载速度" -
display midle "0为不限制,不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-overall-download-limit $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 37 ]];then
display midle "输入单任务最大下载速度" -
display midle "0为不限制,不可为空" -
read command
if [[ $command != "" ]];then
write_conf max-download-limit $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 38 ]];then
if [[ $noconf == true ]];then write_conf no-conf false
else write_conf no-conf true;fi
ariang restart;ariang supersetting

elif [[ $command == 39 ]];then
display midle "输入文件分配限制" -
display midle "不可为空" -
read command
if [[ $command != "" ]];then
write_conf no-file-allocation-limit $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 40 ]];then
if [[ $parameterizeduri == true ]];then write_conf parameterized-uri false
else write_conf parameterized-uri true;fi
ariang restart;ariang supersetting

elif [[ $command == 41 ]];then
if [[ $quiet == true ]];then write_conf quiet false
else write_conf quiet true;fi
ariang restart;ariang supersetting

elif [[ $command == 42 ]];then
if [[ $realtimechunkchecksum == true ]];then write_conf realtime-chunk-checksum false
else write_conf realtime-chunk-checksum true;fi
ariang restart;ariang supersetting

elif [[ $command == 43 ]];then
if [[ $removecontrolfile == true ]];then write_conf remove-control-file false
else write_conf remove-control-file true;fi
ariang restart;ariang supersetting

elif [[ $command == 44 ]];then
display midle "输入状态保存文件路径" -
display midle "不可出错,不建议更改" -
read command
if [[ $command != "" ]];then
if [[ -e $command ]];then
write_conf save-session $command
else display midle "文件不存在" -;fi
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 45 ]];then
display midle "输入自动保存会话间隔" -
display midle "0为退出时才保存,不可为空" -
read command
if [[ $command != "" ]];then
write_conf save-session-interval $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 46 ]];then
display midle "输入缓冲区间大小" -
display midle "0为禁用,不可为空" -
read command
if [[ $command != "" ]];then
write_conf socket-recv-buffer-size $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 47 ]];then
display midle "输入自动关闭程序时间" -
display midle "0为禁用,不可为空" -
read command
if [[ $command != "" ]];then
write_conf stop $command
else ariang supersetting;fi;ariang restart;ariang supersetting
elif [[ $command == 48 ]];then
if [[ $truncateconsolereadout == true ]];then write_conf truncate-console-readout false
else write_conf truncate-console-readout true;fi
ariang restart;ariang supersetting

elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang supersetting;fi


elif [[ $1 == terminalsetting ]];then
stat
display midle "TerminalSettings" -
display side "1 静态核心" "$static" " "
display side "2 自动重启" "$restart" " "
display side "3 语言设置" "$language" " "
display midle 返回主页 - "" onn 00
display midle 退出控制 - "" on 0
read command
if [[ $command == 1 ]];then
if [[ $static == true ]];then write_conf_ng static false
else write_conf_ng static true;fi;ariang restart;ariang terminalsetting
elif [[ $command == 2 ]];then
if [[ $restart == true ]];then write_conf_ng restart false
else write_conf_ng restart true;fi;ariang restart;ariang terminalsetting
elif [[ $command == 3 ]];then
display midle "输入显示语言" -
read command
if [[ $command != "" ]];then
write_conf_ng language $command
else ariang terminalsetting;fi;ariang restart;ariang terminalsetting
elif [[ $command == "00" ]];then ariang
elif [[ $command == "0" ]];then $clear
display midle "Aria2将在后台运行" -;exit
else ariang terminalsetting;fi 

fi 

exit 0

